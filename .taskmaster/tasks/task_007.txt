# Task ID: 7
# Title: Build Main Application with Authentication Flow
# Status: pending
# Dependencies: 3, 4
# Priority: high
# Description: Create the primary SaaS application with complete authentication system and route structure with comprehensive testing coverage
# Details:
Implement apps/main-app with Next.js 15 App Router, create (auth) route group with login, register, forgot-password, and auth callback pages. Implement authentication components (AuthForm, OAuthButtons, ProtectedRoute), setup middleware for route protection, and create auth providers. Follow the exact folder structure specified in the PRD. Include comprehensive testing with Vitest targeting 85% code coverage minimum.

# Test Strategy:
Test authentication flows end-to-end, verify route protection works correctly, test OAuth integration with Google and GitHub, validate form validation and error handling, ensure proper redirects after authentication, and maintain 85% code coverage with comprehensive unit tests covering happy path and edge cases.

# Subtasks:
## 1. Set Up Next.js 15 App Router Project Structure [pending]
### Dependencies: None
### Description: Initialize the Next.js 15 project and configure the folder structure according to the PRD, including the apps/main-app directory and route groups.
### Details:
Create the foundational directory and file structure, ensuring all required folders for routes and components are in place as specified. Set up Vitest testing framework and configure test environment for the project.

## 2. Implement Authentication Route Group and Pages [pending]
### Dependencies: 7.1
### Description: Create the (auth) route group with login, register, forgot-password, and auth callback pages.
### Details:
Develop the necessary pages under the (auth) route group, ensuring each page is accessible and follows the required UI/UX. Implement comprehensive testing for all authentication pages.

## 3. Develop Authentication Components [pending]
### Dependencies: 7.2
### Description: Build reusable authentication components such as AuthForm, OAuthButtons, and ProtectedRoute.
### Details:
Implement and export components for handling user input, OAuth provider buttons, and route protection logic. Create comprehensive test suites for all authentication components.

## 4. Integrate Authentication Providers and Logic [pending]
### Dependencies: 7.3
### Description: Set up authentication providers (e.g., NextAuth.js) and implement authentication logic for sign in, sign up, password reset, and OAuth.
### Details:
Configure NextAuth.js or custom providers, set up API routes or server actions, and connect components to authentication flows. Implement comprehensive testing for all authentication logic and provider integrations.

## 5. Implement Middleware and Route Protection [pending]
### Dependencies: 7.4
### Description: Create and configure middleware to protect routes and redirect users based on authentication status.
### Details:
Write middleware to enforce authentication on protected routes and handle redirects for authenticated/unauthenticated users as specified. Implement comprehensive testing for middleware and route protection functionality.

